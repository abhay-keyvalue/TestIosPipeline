name: "Build Android app"

on:
  workflow_dispatch:
    branches: [main]


permissions:
      id-token: write 
      contents: read 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify your desired Python version

      - name: Install dependencies
        run: |
              pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client jq
 
      - name: Run fetch and update version script
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_KEY: ${{ vars.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}
        run: |
              echo "${GOOGLE_PLAY_SERVICE_ACCOUNT_KEY}" > key.json  # Save the key to a file
              NEW_VERSION_CODE=$(python fetch_and_update_version.py)  # Get the new version code
              echo "New version code: $NEW_VERSION_CODE"      
              sed -i "s|versionCode [0-9]\+|versionCode ${NEW_VERSION_CODE}|" packages/mobile/android/app/build.gradle
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node  
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Run Yarn Install
        run: |
             npm i -g corepack
             yarn install

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      
      - name: Build shared folder
        run: |
             yarn build-shared

      - name: Run Yarn Install
        run: |
             yarn install

      - name: Build with Gradle
        env:
          KEYSTORE_PASSWORD: ${{ vars.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ vars.KEY_ALIAS }}
          KEY_PASSWORD: ${{ vars.KEY_PASSWORD }}
        run: |
             cd packages/mobile/android
             ./gradlew bundleRelease

      - name: Upload application
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: packages/mobile/android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 3

      # New Step: Upload APK to Google Play Console Internal Testing
      - name: Upload APK to Google Play Console Internal Testing
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ vars.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}
          packageName: org.courtapp.dev
          releaseFiles: packages/mobile/android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          inAppUpdatePriority: 3  # Optional: Set in-app update priority
          status: draft           # Optional: You can set status to draft, inProgress, or completed
        env:
          DEBUG: '*'
